package library;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSeparator;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import java.awt.Component;

/**
 *
 * @author Umut
 */
public class book2 extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	boolean isFound = false;

    public book2() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Book Manager");
    }

    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_no = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_bookname = new javax.swing.JTextField();
        txt_author = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_remark = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        btn_find = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("No.");

        jLabel2.setText("Name");

        jLabel3.setText("Author");

        jLabel4.setText("Remark");

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        btn_find.setText("Find");
        btn_find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_findActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        
        separator = new JSeparator();
        
        separator_1 = new JSeparator();
        
        separator_2 = new JSeparator();
        
        separator_3 = new JSeparator();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(separator_3, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 325, GroupLayout.PREFERRED_SIZE)
        				.addComponent(separator_2, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 325, GroupLayout.PREFERRED_SIZE)
        				.addComponent(separator_1, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 325, GroupLayout.PREFERRED_SIZE)
        				.addComponent(separator, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 325, GroupLayout.PREFERRED_SIZE)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(txt_no, 242, 242, 242))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(txt_remark, 242, 242, 242))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(btn_reset, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btn_save, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btn_find, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btn_update, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btn_delete, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(txt_bookname, 242, 242, 242))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(txt_author, 242, 242, 242)))
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap(11, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel1)
        				.addComponent(txt_no, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(separator, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel2)
        				.addComponent(txt_bookname, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(separator_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel3)
        				.addComponent(txt_author, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(separator_2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel4)
        				.addComponent(txt_remark, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        			.addComponent(separator_3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(11)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btn_save)
        				.addComponent(btn_update)
        				.addComponent(btn_reset)
        				.addComponent(btn_find)
        				.addComponent(btn_delete))
        			.addContainerGap())
        );
        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {jLabel1, jLabel2, jLabel3, jLabel4});
        getContentPane().setLayout(layout);

        pack();
    }

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {
        String id = txt_no.getText();
        String firstname = txt_bookname.getText();
        String lastname = txt_author.getText();
        String email = txt_remark.getText();

        if (id.isEmpty() || firstname.isEmpty() || lastname.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "fill all fields");
        } else {
            File file = new File("D:\\books2.txt");
            books2 Books2 = new books2(id, firstname, lastname, email);

            try (PrintWriter pw = new PrintWriter(new FileWriter(file, true))) {
                pw.println(Books2.toString());
                JOptionPane.showMessageDialog(this, "new book added");
                btn_save.setEnabled(false);
                txt_no.setEnabled(false);
                txt_bookname.setEnabled(false);
                txt_author.setEnabled(false);
                txt_remark.setEnabled(false);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }


    }

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {
        txt_no.setText("");
        txt_bookname.setText("");
        txt_author.setText("");
        txt_remark.setText("");
        
        txt_no.setEnabled(true);
        txt_bookname.setEnabled(true);
        txt_author.setEnabled(true);
        txt_remark.setEnabled(true);
        
        btn_save.setEnabled(true);
        btn_update.setEnabled(true);
        btn_delete.setEnabled(true);
    }

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {
        String search_id = txt_no.getText();
        String firstname = txt_bookname.getText();
        String lastname = txt_author.getText();
        String email = txt_remark.getText();

        ArrayList<books2> Books2List = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "enter a valid No and search");
        } else if (search_id.isEmpty() || firstname.isEmpty() || lastname.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "fill all fields");
        } else {
            File file = new File("D:\\books2.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    books2 tempbooks2;

                    while ((data = br.readLine()) != null) {
                        tempbooks2 = new books2(data);
                        if (tempbooks2.getId().equals(search_id)) {
                            tempbooks2.setFirstname(firstname);
                            tempbooks2.setLastname(lastname);
                            tempbooks2.setEmail(email);
                        }
                        Books2List.add(tempbooks2);
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    Books2List.forEach((Books2) -> {
                        pw.println(Books2.toString());
                    });
                    JOptionPane.showMessageDialog(this, "book updated");
                    btn_update.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }

            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_findActionPerformed

        txt_bookname.setText("");
        txt_author.setText("");
        txt_remark.setText("");
        isFound = false;
        btn_update.setEnabled(true);
        btn_delete.setEnabled(true);

        String search_id = txt_no.getText();

        if (search_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "enter an No to search");
        } else {
            File file = new File("D:\\books2.txt");

            try {
                FileReader fr = new FileReader(file);
                br = new BufferedReader(fr);
                String data;
                books2 Books2;

                while ((data = br.readLine()) != null) {
                    Books2 = new books2(data);
                    if (Books2.getId().equals(search_id)) {
                        isFound = true;
                        txt_bookname.setText(Books2.getFirstname());
                        txt_author.setText(Books2.getLastname());
                        txt_remark.setText(Books2.getEmail());
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "book not found");
            } catch (FileNotFoundException ex) {

            } catch (IOException ex) {

            }
        }

    }//GEN-LAST:event_btn_findActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        String delete_id = txt_no.getText();

        ArrayList<books2> Books2List = new ArrayList<>();

        if (!isFound) {
            JOptionPane.showMessageDialog(this, "enter a valid No and search");
        } else {
            File file = new File("D:\\books2.txt");

            try {
                try (FileReader fr = new FileReader(file)) {
                    BufferedReader br = new BufferedReader(fr);
                    String data;
                    books2 tempbooks2;

                    while ((data = br.readLine()) != null) {
                        tempbooks2 = new books2(data);
                        if (!tempbooks2.getId().equals(delete_id)) {
                            Books2List.add(tempbooks2);
                        }                        
                    }
                }

                try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                    Books2List.forEach((Books2) -> {
                        pw.println(Books2.toString());
                    });
                    JOptionPane.showMessageDialog(this, "book deleted");
                    btn_delete.setEnabled(false);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }

            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_find;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txt_remark;
    private javax.swing.JTextField txt_bookname;
    private javax.swing.JTextField txt_no;
    private javax.swing.JTextField txt_author;
    private JSeparator separator;
    private JSeparator separator_1;
    private JSeparator separator_2;
    private JSeparator separator_3;
    // End of variables declaration//GEN-END:variables
	private BufferedReader br;
}